name: run-selenium-tests
run-name: ${{ github.actor }} is learning GitHub Actions
on: 
  push:
  schedule:
    - cron: '30 11 * * 1-5'

jobs:
  run-tests:
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Set up Allure CLI
        run: |
          sudo apt-get install default-jre
          wget https://github.com/allure-framework/allure2/releases/download/2.18.1/allure_2.18.1-1_all.deb
          sudo dpkg -i allure_2.18.1-1_all.deb
          allure --version
      - name: Set up Selenium Grid
        run: docker-compose up -d --scale chrome=4 --scale firefox=0
      - name : Check Grid Status
        run: |
          set -e
          url="http://localhost:4444/wd/hub/status"
          wait_interval_in_seconds=1
          max_wait_time_in_seconds=30
          end_time=$((SECONDS + max_wait_time_in_seconds))
          time_left=$max_wait_time_in_seconds
          
          while [ $SECONDS -lt $end_time ]; do
              response=$(curl -sL "$url" | jq -r '.value.ready')
              if [ -n "$response"  ]  && [ "$response" ]; then
                  echo "Selenium Grid is up - executing tests"
                  break
              else
                  echo "Waiting for the Grid. Sleeping for $wait_interval_in_seconds second(s). $time_left seconds left until timeout."
                  sleep $wait_interval_in_seconds
                  time_left=$((time_left - wait_interval_in_seconds))
              fi
          done
          
          if [ $SECONDS -ge $end_time ]; then
              echo "Timeout: The Grid was not started within $max_wait_time_in_seconds seconds."
              exit 1
          fi
      - name: Install Dependencies
        run: pip install -r requirements.txt
      - name: Test with Pytest
        env: 
          SAUCE_LOCKED_USER_NAME: ${{ secrets.SAUCE_LOCKED_USER_NAME }}
          SAUCE_PERFORMANCE_USER_NAME: ${{ secrets.SAUCE_PERFORMANCE_USER_NAME }}
          SAUCE_PROBLEM_USER_NAME: ${{ secrets.SAUCE_PROBLEM_USER_NAME }}
          SAUCE_VALID_PASSWORD: ${{ secrets.SAUCE_VALID_PASSWORD }}
          SAUCE_VALID_USER_NAME: ${{ secrets.SAUCE_VALID_USER_NAME }}
        run: pytest --alluredir=tmp/allure-results
      - name: Generate Allure Report
        run: |
          allure generate tmp/allure-results -o tmp/allure-report
          allure-combine tmp/allure-report
      - name: Stop Docker
        run: docker-compose down
      - name: Archive Test Report
        uses: actions/upload-artifact@v3
        with:
          name: allure-report
          path: tmp/allure-report/complete.html
      # - name: Download test report artifacts
      #   uses: actions/download-artifact@v3